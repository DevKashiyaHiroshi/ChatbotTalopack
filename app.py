import google.generativeai as genai
import streamlit as st
import pandas as pd

# C·∫•u h√¨nh API key
genai.configure(api_key=st.secrets["GEMINI_API_KEY"])

# Kh·ªüi t·∫°o model Gemini Pro
model = genai.GenerativeModel("gemini-pro")

# Giao di·ªán ng∆∞·ªùi d√πng
st.title("üìÑ Chatbot ISO ‚Äì TALOPACK (Gemini)")
query = st.text_input("H·ªèi t√¥i v·ªÅ t√†i li·ªáu ISO b·∫°n c·∫ßn:")

# ƒê·ªçc d·ªØ li·ªáu t√†i li·ªáu
try:
    df = pd.read_csv("iso_data.csv")
except:
    st.error("Kh√¥ng t√¨m th·∫•y iso_data.csv")
    st.stop()

# X·ª≠ l√Ω khi ng∆∞·ªùi d√πng nh·∫≠p c√¢u h·ªèi
if query:
    context = "\n".join([f"{row['T√™n']} ({row['Lo·∫°i']}): {row['T√≥m t·∫Øt']}" for _, row in df.iterrows()])
    prompt = f"""
B·∫°n l√† tr·ª£ l√Ω ISO c·ªßa c√¥ng ty. D∆∞·ªõi ƒë√¢y l√† danh s√°ch t√†i li·ªáu:

{context}

Ng∆∞·ªùi d√πng h·ªèi: "{query}". 
H√£y g·ª£i √Ω t√†i li·ªáu li√™n quan (t√™n, lo·∫°i, m√¥ t·∫£) n·∫øu c√≥, v√† g·ª£i √Ω link n·∫øu t√¨m th·∫•y.
"""

    try:
        response = model.generate_content(prompt)
        st.markdown("### üìò Tr·∫£ l·ªùi:")
        st.write(response.text)

    except Exception as e:
        st.error(f"L·ªói g·ªçi Gemini API: {e}")
